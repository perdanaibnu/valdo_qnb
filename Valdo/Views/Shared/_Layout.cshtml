<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title | Valdo</title>

    @Styles.Render("~/Content/css")
</head>
<body class="hold-transition skin-blue sidebar-mini fixed">
    @{
        DateTime ServerTime = DateTime.Now;
    }
    <div class="wrapper">
        <header class="main-header">
            <a href="~/Home/Index" class="logo">
                <span style="color:white; opacity: 80%;"><b>VALDO (QNB)</b></span>
            </a>
            <nav class="navbar navbar-static-top">
                <a href="#" class="sidebar-toggle" data-toggle="push-menu" role="button">
                    <span class="sr-only">Toggle navigation</span>
                </a>
                <div class="navbar-custom-menu">
                    <ul class="nav navbar-nav">
                        <li class="dropdown">
                            <a class="dropdown-toggle">
                                <span id="lastaccess"></span>
                            </a>
                        </li>
                        <li class="dropdown">
                            <a class="dropdown-toggle" title="Server Time">
                                <span id="servertime"></span>
                            </a>
                        </li>
                    </ul>
                </div>
            </nav>
        </header>
        <aside class="main-sidebar">
            <section class="sidebar">
                <div id="UserMenu">
                    @Html.Partial("~/Views/Shared/_Menu.cshtml");
                </div>
            </section>
        </aside>
        <div class="content-wrapper">
            @RenderBody()
        </div>
        <div id="callBackModal" class="modal fade" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content" id="callBackModalContent">
                </div>
            </div>
        </div>
        <div id="myModal" class="modal fade">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">x</span>
                        </button>
                        <h4 class="modal-title text-bold"></h4>
                    </div>
                    <div class="modal-body">
                    </div>
                    <div class="modal-footer text-center">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
        <button onclick="topFunction()" id="scroll" title="Go to top">Top</button>
        <footer class="main-footer">
            <strong>QNB</strong> Internal Application-Test
        </footer>
        <div class="control-sidebar-bg"></div>
    </div>

    @Scripts.Render("~/bundles/js")

    <script>
        var d = new Date("@(ServerTime.ToString())");

        function startTimer() {
            nIntervId = setInterval(setTimer, 1000);
        }

        function setTimer() {
            d = moment(d).add(1, 's').toDate();
            $("#servertime").html(moment(d).format('DD MMM YYYY HH:mm:ss'))
        }

        format_tgl = 'mm/dd/yyyy';
        format_tgl_upper = format_tgl.toUpperCase();
        $(function () {
            setDatePicker = {
                format: format_tgl,
                todayHighlight: true,
                autoclose: true,
                orientation: "bottom auto",
                keyboardNavigation: false,
            };
            $('.select2').select2({ theme: 'bootstrap' });
            $('.datepicker').datepicker(setDatePicker).inputmask(format_tgl, { 'placeholder': format_tgl });
            $('.money').inputmask('decimal', {
                autoGroup: true,
                groupSeparator: ",",
                removeMaskOnSubmit: true,
                autoUnmask: true
            });
        });

        var pleaseWaitDialog;
        pleaseWaitDialog = pleaseWaitDialog || (function () {
            var pleaseWaitDiv = $('<div class="modal fade" id="pleaseWaitDialog" data-backdrop="static" data-keyboard="false"><div class="modal-dialog"><div class="modal-content"><div class="modal-header"><h1>Please wait while we are generating your report...</h1></div><div class="modal-body"><div class="progress active"><div class="progress-bar progress-bar-primary progress-bar-striped" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="100" style="width: 100%"></div></div></div></div></div></div>');
            return {
                show: function () {
                    pleaseWaitDiv.modal();
                },
                hide: function () {
                    pleaseWaitDiv.modal('hide');
                },

            };
        })();

        $(document).ready(function () {
            startTimer();
            $('.datatable').DataTable();
        });
    </script>

    <script>
        function isStringNullOrEmpty(val) {
            switch (val) {
                case "":
                case 0:
                case "0":
                case null:
                case false:
                case undefined:
                case typeof this === 'undefined':
                    return true;
                default: return false;
            }
        }

        function genDTHref(url, text) {
            return '<a href="' + url + '" class="text-primary">' + text + '</a>';
        }

        function formatDate(tgl) {
            return moment(tgl).format("DD-MM-YYYY");
        }

        function addCommas(x) {
            if (x == null | x == '') { return '' };
            x = tNumber(x);
            var parts = x.toString().split(".");
            parts[0] = parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
            return parts.join(".");
        }

        function tNumber(val) {
            val = parseFloat(val.toString().replace(/\,/g, ''));
            if (isNaN(val))
                val = 0;
            return val;
        }
    </script>

    <script>
        var is_index = false;
        var url_get_list = null;
        var url_to_index = null;
        var url_to_delete = null;

        function DeleteData(id) {
            if (url_to_index == "" || url_to_index == null) url_to_index = "@Url.Action("Index")";
            if (url_to_delete == "" || url_to_delete == null) url_to_delete = "@Url.Action("Delete")";
            var id = $("#" + id).val();
            var token = $('input[name="__RequestVerificationToken"]').val()
            Swal({
                title: 'Apakah Anda yakin akan menghapus data ini?',
                text: "Data yang dihapus tidak dapat dikembalikan!",
                type: 'warning',
                showCancelButton: true,
                confirmButtonClass: 'btn btn-success',
                cancelButtonClass: 'btn btn-danger',
                confirmButtonText: 'Ya, Hapus data ini!'
            }).then((result) => {
                if (result.value) {
                    $.ajax({
                        type: "POST",
                        url: url_to_delete,
                        data: { __RequestVerificationToken: token, id: id },
                        success: function (data) {
                            if (data.result == 'success') {
                                Swal('', 'Data telah berhasil dihapus!', 'success').then((result) => {
                                    if (result.value) { location.replace(url_to_index) }
                                });
                            } else {
                                Swal('Data tidak berhasil dihapus!', data.msg, 'error')
                            }
                        },
                        error: function (err) {
                            swal('', err.responseText, 'error');
                        }
                    });
                }
            });
        }

        function getJsonResult(url, param, tipe) {
            var result = null;
            if (param == null) param = {};
            var error = "error";
            var tbl = "result";
            if (tipe != null && tipe != "") {
                error = "result";
                tbl = "tbl";
            }
            $.ajax({
                url: url,
                data: param,
                cache: false,
                type: "POST",
                async: false,
                success: function (data) {
                    if (data[error] == "") result = data[tbl];
                    else swal('', data[error], 'error');
                },
                error: function (err) {
                    swal('', err.responseText, 'error');
                }
            });
            return result;
        }

        function setColumnForDataTable(cols, url) {
            var result = [];
            $.each(cols, function (key, val) {
                if (val.allign == "" || val.allign == null) {
                    val.allign = "left";
                    if (val.format != null && val.format == 'num') val.allign = "right";
                    if (val.format != null && val.format == 'date') val.allign = "center";
                }
                var src = true;
                if (val.search != null) src = val.search;
                var ord = true;
                if (val.order != null) ord = val.order;
                var vis = true;
                if (val.visible != null) vis = val.visible;
                if (val.name == null) val.name = "";
                if (val.title == null) val.title = "";
                var nr = { data: val.name, title: val.title, className: "text-" + val.allign.toLowerCase() + "", searchable: src, orderable: ord, visible: vis };
                if (!isStringNullOrEmpty(val.add_cls)) nr.className += ' ' + val.add_cls;
                else nr.name = val.name;
                var placeholder = '';
                if (val.placeholder != null) placeholder = val.placeholder;
                var length = '';
                if (val.length != null) length = val.length;
                var width = '';
                if (val.width != null) nr.width = val.width;
                if (val.format != null) {
                    if (val.format == 'num' || val.format == 'date' || val.format == 'string') nr.type = val.format;
                    nr.render = function (data, type, row, cell) {
                        var output = data;
                        if (!(type != "display")) {
                            if (val.format == 'num') output = addCommas(data);
                            else if (val.format == 'date') output = formatDate(data);
                        }
                        return output;
                    };
                }
                if (val.link != null) {
                    if (url == "" || url == null) url = "@Url.Action("Form")";
                    nr.render = function (data, type, row, cell) {
                        return type != "display" ? data : genDTHref(url + '/' + row[val.link], data);
                    };
                }
                result.push(nr);
            });
            return result;
        }
    </script>

    @RenderSection("scripts", required: false)

    <script language="javascript" type="text/javascript">
        $(document).ready(function () {
            if (is_index) {
                var param = { };
                var cols = getJsonResult("@Url.Action("getColumnConfig")", param);
                if (url_get_list == "" || url_get_list == null) url_get_list = "@Url.Action("getDataList")";
                var col_dt = setColumnForDataTable(cols, "@Url.Action("Form")");
                var tbl_index = $('#tbl_index').DataTable({
                    "responsive": true,
                    "processing": true,
                    "serverSide": true,
                    "initComplete": function() {
                        $('#tbl_index_filter input').unbind();
                        $('#tbl_index_filter input').bind('keyup', function(e){
                            var code = e.keyCode || e.which;
                            if (code == 13) {
                                tbl_index.search(this.value).draw();
                            }
                        });
                    },
                    "ajax": {
                        url: url_get_list,
                        type: 'POST',
                        data: param
                    },
                    "columns": col_dt,
                    "order": [],
                    "lengthMenu": [[10, 25, 50, 100, 10000], [10, 25, 50, 100, "All"]],
                    "dom": '<"row"<"col-sm-6"l><"col-sm-6"f>>' +
                           '<"row"<"col-sm-6"<"pull-right"<"toolbar-print">>>>' +
                           '<"row"<"col-sm-12"t>>' +
                           '<"row"<"col-sm-5"i><"col-sm-7"p>>',
                    "select": {
                        style: 'multi'
                    },
                    "language": {
                        processing: '<i class="fa fa-spinner fa-spin fa-2x fa-fw"></i><span class="">Loading...</span> ',
                    }
                });
            }
        });        
    </script>
    @RenderSection("scripts2", required: false)
</body>
</html>
